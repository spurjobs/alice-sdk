<?php
/**
 * UserEntity
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Alice Payroll Provider API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.7
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * UserEntity Class Doc Comment
 *
 * @category Class
 * @description Accepts employee&#x27;s Terms of Service
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UserEntity implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'UserEntity';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'employee_id' => 'int',
'first_name' => 'string',
'last_name' => 'string',
'email' => 'string',
'tel' => 'string',
'organization_admin_profile' => '\Swagger\Client\Model\OrganizationAdminProfileEntity',
'admin_profile' => '\Swagger\Client\Model\UserAdminProfileEntity',
'employee_profile' => '\Swagger\Client\Model\EmployeeProfileEntity',
'settings' => 'object',
'birthdate' => 'string',
'over_eighteen' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'employee_id' => 'int32',
'first_name' => null,
'last_name' => null,
'email' => null,
'tel' => null,
'organization_admin_profile' => null,
'admin_profile' => null,
'employee_profile' => null,
'settings' => null,
'birthdate' => null,
'over_eighteen' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'employee_id' => 'employee_id',
'first_name' => 'first_name',
'last_name' => 'last_name',
'email' => 'email',
'tel' => 'tel',
'organization_admin_profile' => 'organization_admin_profile',
'admin_profile' => 'admin_profile',
'employee_profile' => 'employee_profile',
'settings' => 'settings',
'birthdate' => 'birthdate',
'over_eighteen' => 'over_eighteen'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'employee_id' => 'setEmployeeId',
'first_name' => 'setFirstName',
'last_name' => 'setLastName',
'email' => 'setEmail',
'tel' => 'setTel',
'organization_admin_profile' => 'setOrganizationAdminProfile',
'admin_profile' => 'setAdminProfile',
'employee_profile' => 'setEmployeeProfile',
'settings' => 'setSettings',
'birthdate' => 'setBirthdate',
'over_eighteen' => 'setOverEighteen'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'employee_id' => 'getEmployeeId',
'first_name' => 'getFirstName',
'last_name' => 'getLastName',
'email' => 'getEmail',
'tel' => 'getTel',
'organization_admin_profile' => 'getOrganizationAdminProfile',
'admin_profile' => 'getAdminProfile',
'employee_profile' => 'getEmployeeProfile',
'settings' => 'getSettings',
'birthdate' => 'getBirthdate',
'over_eighteen' => 'getOverEighteen'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['employee_id'] = isset($data['employee_id']) ? $data['employee_id'] : 222;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : 'Albus';
        $this->container['last_name'] = isset($data['last_name']) ? $data['last_name'] : 'Dumbledore';
        $this->container['email'] = isset($data['email']) ? $data['email'] : 'albus@example.com';
        $this->container['tel'] = isset($data['tel']) ? $data['tel'] : '+15556754343';
        $this->container['organization_admin_profile'] = isset($data['organization_admin_profile']) ? $data['organization_admin_profile'] : null;
        $this->container['admin_profile'] = isset($data['admin_profile']) ? $data['admin_profile'] : null;
        $this->container['employee_profile'] = isset($data['employee_profile']) ? $data['employee_profile'] : null;
        $this->container['settings'] = isset($data['settings']) ? $data['settings'] : null;
        $this->container['birthdate'] = isset($data['birthdate']) ? $data['birthdate'] : '09/01/1980';
        $this->container['over_eighteen'] = isset($data['over_eighteen']) ? $data['over_eighteen'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['employee_id'] === null) {
            $invalidProperties[] = "'employee_id' can't be null";
        }
        if ($this->container['first_name'] === null) {
            $invalidProperties[] = "'first_name' can't be null";
        }
        if ($this->container['last_name'] === null) {
            $invalidProperties[] = "'last_name' can't be null";
        }
        if ($this->container['email'] === null) {
            $invalidProperties[] = "'email' can't be null";
        }
        if ($this->container['tel'] === null) {
            $invalidProperties[] = "'tel' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets employee_id
     *
     * @return int
     */
    public function getEmployeeId()
    {
        return $this->container['employee_id'];
    }

    /**
     * Sets employee_id
     *
     * @param int $employee_id Id
     *
     * @return $this
     */
    public function setEmployeeId($employee_id)
    {
        $this->container['employee_id'] = $employee_id;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string $first_name First Name
     *
     * @return $this
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string $last_name Last Name
     *
     * @return $this
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email Email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets tel
     *
     * @return string
     */
    public function getTel()
    {
        return $this->container['tel'];
    }

    /**
     * Sets tel
     *
     * @param string $tel Telephone
     *
     * @return $this
     */
    public function setTel($tel)
    {
        $this->container['tel'] = $tel;

        return $this;
    }

    /**
     * Gets organization_admin_profile
     *
     * @return \Swagger\Client\Model\OrganizationAdminProfileEntity
     */
    public function getOrganizationAdminProfile()
    {
        return $this->container['organization_admin_profile'];
    }

    /**
     * Sets organization_admin_profile
     *
     * @param \Swagger\Client\Model\OrganizationAdminProfileEntity $organization_admin_profile organization_admin_profile
     *
     * @return $this
     */
    public function setOrganizationAdminProfile($organization_admin_profile)
    {
        $this->container['organization_admin_profile'] = $organization_admin_profile;

        return $this;
    }

    /**
     * Gets admin_profile
     *
     * @return \Swagger\Client\Model\UserAdminProfileEntity
     */
    public function getAdminProfile()
    {
        return $this->container['admin_profile'];
    }

    /**
     * Sets admin_profile
     *
     * @param \Swagger\Client\Model\UserAdminProfileEntity $admin_profile admin_profile
     *
     * @return $this
     */
    public function setAdminProfile($admin_profile)
    {
        $this->container['admin_profile'] = $admin_profile;

        return $this;
    }

    /**
     * Gets employee_profile
     *
     * @return \Swagger\Client\Model\EmployeeProfileEntity
     */
    public function getEmployeeProfile()
    {
        return $this->container['employee_profile'];
    }

    /**
     * Sets employee_profile
     *
     * @param \Swagger\Client\Model\EmployeeProfileEntity $employee_profile employee_profile
     *
     * @return $this
     */
    public function setEmployeeProfile($employee_profile)
    {
        $this->container['employee_profile'] = $employee_profile;

        return $this;
    }

    /**
     * Gets settings
     *
     * @return object
     */
    public function getSettings()
    {
        return $this->container['settings'];
    }

    /**
     * Sets settings
     *
     * @param object $settings App settings
     *
     * @return $this
     */
    public function setSettings($settings)
    {
        $this->container['settings'] = $settings;

        return $this;
    }

    /**
     * Gets birthdate
     *
     * @return string
     */
    public function getBirthdate()
    {
        return $this->container['birthdate'];
    }

    /**
     * Sets birthdate
     *
     * @param string $birthdate US format birthdate
     *
     * @return $this
     */
    public function setBirthdate($birthdate)
    {
        $this->container['birthdate'] = $birthdate;

        return $this;
    }

    /**
     * Gets over_eighteen
     *
     * @return string
     */
    public function getOverEighteen()
    {
        return $this->container['over_eighteen'];
    }

    /**
     * Sets over_eighteen
     *
     * @param string $over_eighteen Determines if employee is eligible for certain benefits
     *
     * @return $this
     */
    public function setOverEighteen($over_eighteen)
    {
        $this->container['over_eighteen'] = $over_eighteen;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
