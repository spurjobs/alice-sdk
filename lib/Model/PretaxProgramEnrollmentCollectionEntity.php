<?php
/**
 * PretaxProgramEnrollmentCollectionEntity
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Alice Payroll Provider API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.7
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * PretaxProgramEnrollmentCollectionEntity Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PretaxProgramEnrollmentCollectionEntity implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PretaxProgramEnrollmentCollectionEntity';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'estimated_annual_savings_dollars' => 'float',
'estimated_dependent_care_annual_savings_dollars' => 'float',
'estimated_hsa_annual_savings_dollars' => 'float',
'total_estimated_pretax_savings_dollars' => 'float',
'total_pretax_spend_dollars' => 'float',
'organization_offers_dependent_care' => 'bool',
'organization_offers_hsa' => 'bool',
'organization_offers_general_hfsa' => 'bool',
'organization_offers_limited_hfsa' => 'bool',
'transit_programs' => '\Swagger\Client\Model\PretaxProgramEnrollmentEntity[]',
'dependent_care_programs' => '\Swagger\Client\Model\DependentCareProgramEnrollmentEntity',
'hsa_program' => '\Swagger\Client\Model\HSAProgramEnrollmentEntity',
'healthcare_fsa_programs' => '\Swagger\Client\Model\HealthcareFSAProgramEnrollmentEntity'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'estimated_annual_savings_dollars' => 'float',
'estimated_dependent_care_annual_savings_dollars' => 'float',
'estimated_hsa_annual_savings_dollars' => 'float',
'total_estimated_pretax_savings_dollars' => 'float',
'total_pretax_spend_dollars' => 'float',
'organization_offers_dependent_care' => null,
'organization_offers_hsa' => null,
'organization_offers_general_hfsa' => null,
'organization_offers_limited_hfsa' => null,
'transit_programs' => null,
'dependent_care_programs' => null,
'hsa_program' => null,
'healthcare_fsa_programs' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'estimated_annual_savings_dollars' => 'estimated_annual_savings_dollars',
'estimated_dependent_care_annual_savings_dollars' => 'estimated_dependent_care_annual_savings_dollars',
'estimated_hsa_annual_savings_dollars' => 'estimated_hsa_annual_savings_dollars',
'total_estimated_pretax_savings_dollars' => 'total_estimated_pretax_savings_dollars',
'total_pretax_spend_dollars' => 'total_pretax_spend_dollars',
'organization_offers_dependent_care' => 'organization_offers_dependent_care',
'organization_offers_hsa' => 'organization_offers_hsa',
'organization_offers_general_hfsa' => 'organization_offers_general_hfsa',
'organization_offers_limited_hfsa' => 'organization_offers_limited_hfsa',
'transit_programs' => 'transit_programs',
'dependent_care_programs' => 'dependent_care_programs',
'hsa_program' => 'hsa_program',
'healthcare_fsa_programs' => 'healthcare_fsa_programs'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'estimated_annual_savings_dollars' => 'setEstimatedAnnualSavingsDollars',
'estimated_dependent_care_annual_savings_dollars' => 'setEstimatedDependentCareAnnualSavingsDollars',
'estimated_hsa_annual_savings_dollars' => 'setEstimatedHsaAnnualSavingsDollars',
'total_estimated_pretax_savings_dollars' => 'setTotalEstimatedPretaxSavingsDollars',
'total_pretax_spend_dollars' => 'setTotalPretaxSpendDollars',
'organization_offers_dependent_care' => 'setOrganizationOffersDependentCare',
'organization_offers_hsa' => 'setOrganizationOffersHsa',
'organization_offers_general_hfsa' => 'setOrganizationOffersGeneralHfsa',
'organization_offers_limited_hfsa' => 'setOrganizationOffersLimitedHfsa',
'transit_programs' => 'setTransitPrograms',
'dependent_care_programs' => 'setDependentCarePrograms',
'hsa_program' => 'setHsaProgram',
'healthcare_fsa_programs' => 'setHealthcareFsaPrograms'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'estimated_annual_savings_dollars' => 'getEstimatedAnnualSavingsDollars',
'estimated_dependent_care_annual_savings_dollars' => 'getEstimatedDependentCareAnnualSavingsDollars',
'estimated_hsa_annual_savings_dollars' => 'getEstimatedHsaAnnualSavingsDollars',
'total_estimated_pretax_savings_dollars' => 'getTotalEstimatedPretaxSavingsDollars',
'total_pretax_spend_dollars' => 'getTotalPretaxSpendDollars',
'organization_offers_dependent_care' => 'getOrganizationOffersDependentCare',
'organization_offers_hsa' => 'getOrganizationOffersHsa',
'organization_offers_general_hfsa' => 'getOrganizationOffersGeneralHfsa',
'organization_offers_limited_hfsa' => 'getOrganizationOffersLimitedHfsa',
'transit_programs' => 'getTransitPrograms',
'dependent_care_programs' => 'getDependentCarePrograms',
'hsa_program' => 'getHsaProgram',
'healthcare_fsa_programs' => 'getHealthcareFsaPrograms'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['estimated_annual_savings_dollars'] = isset($data['estimated_annual_savings_dollars']) ? $data['estimated_annual_savings_dollars'] : 570.82;
        $this->container['estimated_dependent_care_annual_savings_dollars'] = isset($data['estimated_dependent_care_annual_savings_dollars']) ? $data['estimated_dependent_care_annual_savings_dollars'] : 2150.0;
        $this->container['estimated_hsa_annual_savings_dollars'] = isset($data['estimated_hsa_annual_savings_dollars']) ? $data['estimated_hsa_annual_savings_dollars'] : 1400.0;
        $this->container['total_estimated_pretax_savings_dollars'] = isset($data['total_estimated_pretax_savings_dollars']) ? $data['total_estimated_pretax_savings_dollars'] : 290.77;
        $this->container['total_pretax_spend_dollars'] = isset($data['total_pretax_spend_dollars']) ? $data['total_pretax_spend_dollars'] : 1290.77;
        $this->container['organization_offers_dependent_care'] = isset($data['organization_offers_dependent_care']) ? $data['organization_offers_dependent_care'] : null;
        $this->container['organization_offers_hsa'] = isset($data['organization_offers_hsa']) ? $data['organization_offers_hsa'] : null;
        $this->container['organization_offers_general_hfsa'] = isset($data['organization_offers_general_hfsa']) ? $data['organization_offers_general_hfsa'] : null;
        $this->container['organization_offers_limited_hfsa'] = isset($data['organization_offers_limited_hfsa']) ? $data['organization_offers_limited_hfsa'] : null;
        $this->container['transit_programs'] = isset($data['transit_programs']) ? $data['transit_programs'] : null;
        $this->container['dependent_care_programs'] = isset($data['dependent_care_programs']) ? $data['dependent_care_programs'] : null;
        $this->container['hsa_program'] = isset($data['hsa_program']) ? $data['hsa_program'] : null;
        $this->container['healthcare_fsa_programs'] = isset($data['healthcare_fsa_programs']) ? $data['healthcare_fsa_programs'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets estimated_annual_savings_dollars
     *
     * @return float
     */
    public function getEstimatedAnnualSavingsDollars()
    {
        return $this->container['estimated_annual_savings_dollars'];
    }

    /**
     * Sets estimated_annual_savings_dollars
     *
     * @param float $estimated_annual_savings_dollars Estimated Employee annual tax savings across all programs
     *
     * @return $this
     */
    public function setEstimatedAnnualSavingsDollars($estimated_annual_savings_dollars)
    {
        $this->container['estimated_annual_savings_dollars'] = $estimated_annual_savings_dollars;

        return $this;
    }

    /**
     * Gets estimated_dependent_care_annual_savings_dollars
     *
     * @return float
     */
    public function getEstimatedDependentCareAnnualSavingsDollars()
    {
        return $this->container['estimated_dependent_care_annual_savings_dollars'];
    }

    /**
     * Sets estimated_dependent_care_annual_savings_dollars
     *
     * @param float $estimated_dependent_care_annual_savings_dollars Estimated Employee annual tax savings for dependent care
     *
     * @return $this
     */
    public function setEstimatedDependentCareAnnualSavingsDollars($estimated_dependent_care_annual_savings_dollars)
    {
        $this->container['estimated_dependent_care_annual_savings_dollars'] = $estimated_dependent_care_annual_savings_dollars;

        return $this;
    }

    /**
     * Gets estimated_hsa_annual_savings_dollars
     *
     * @return float
     */
    public function getEstimatedHsaAnnualSavingsDollars()
    {
        return $this->container['estimated_hsa_annual_savings_dollars'];
    }

    /**
     * Sets estimated_hsa_annual_savings_dollars
     *
     * @param float $estimated_hsa_annual_savings_dollars Estimated Employee annual tax savings for HSA
     *
     * @return $this
     */
    public function setEstimatedHsaAnnualSavingsDollars($estimated_hsa_annual_savings_dollars)
    {
        $this->container['estimated_hsa_annual_savings_dollars'] = $estimated_hsa_annual_savings_dollars;

        return $this;
    }

    /**
     * Gets total_estimated_pretax_savings_dollars
     *
     * @return float
     */
    public function getTotalEstimatedPretaxSavingsDollars()
    {
        return $this->container['total_estimated_pretax_savings_dollars'];
    }

    /**
     * Sets total_estimated_pretax_savings_dollars
     *
     * @param float $total_estimated_pretax_savings_dollars Total Employee savings across all programs since customer signed up
     *
     * @return $this
     */
    public function setTotalEstimatedPretaxSavingsDollars($total_estimated_pretax_savings_dollars)
    {
        $this->container['total_estimated_pretax_savings_dollars'] = $total_estimated_pretax_savings_dollars;

        return $this;
    }

    /**
     * Gets total_pretax_spend_dollars
     *
     * @return float
     */
    public function getTotalPretaxSpendDollars()
    {
        return $this->container['total_pretax_spend_dollars'];
    }

    /**
     * Sets total_pretax_spend_dollars
     *
     * @param float $total_pretax_spend_dollars Total Employee spend across all programs
     *
     * @return $this
     */
    public function setTotalPretaxSpendDollars($total_pretax_spend_dollars)
    {
        $this->container['total_pretax_spend_dollars'] = $total_pretax_spend_dollars;

        return $this;
    }

    /**
     * Gets organization_offers_dependent_care
     *
     * @return bool
     */
    public function getOrganizationOffersDependentCare()
    {
        return $this->container['organization_offers_dependent_care'];
    }

    /**
     * Sets organization_offers_dependent_care
     *
     * @param bool $organization_offers_dependent_care Org has signed caf plan, and enabled depcare for their employees
     *
     * @return $this
     */
    public function setOrganizationOffersDependentCare($organization_offers_dependent_care)
    {
        $this->container['organization_offers_dependent_care'] = $organization_offers_dependent_care;

        return $this;
    }

    /**
     * Gets organization_offers_hsa
     *
     * @return bool
     */
    public function getOrganizationOffersHsa()
    {
        return $this->container['organization_offers_hsa'];
    }

    /**
     * Sets organization_offers_hsa
     *
     * @param bool $organization_offers_hsa Org has signed caf plan, and enabled HSA for their employees
     *
     * @return $this
     */
    public function setOrganizationOffersHsa($organization_offers_hsa)
    {
        $this->container['organization_offers_hsa'] = $organization_offers_hsa;

        return $this;
    }

    /**
     * Gets organization_offers_general_hfsa
     *
     * @return bool
     */
    public function getOrganizationOffersGeneralHfsa()
    {
        return $this->container['organization_offers_general_hfsa'];
    }

    /**
     * Sets organization_offers_general_hfsa
     *
     * @param bool $organization_offers_general_hfsa Org has signed caf plan, and enabled HFSA for their employees
     *
     * @return $this
     */
    public function setOrganizationOffersGeneralHfsa($organization_offers_general_hfsa)
    {
        $this->container['organization_offers_general_hfsa'] = $organization_offers_general_hfsa;

        return $this;
    }

    /**
     * Gets organization_offers_limited_hfsa
     *
     * @return bool
     */
    public function getOrganizationOffersLimitedHfsa()
    {
        return $this->container['organization_offers_limited_hfsa'];
    }

    /**
     * Sets organization_offers_limited_hfsa
     *
     * @param bool $organization_offers_limited_hfsa Org has signed caf plan, and enabled HFSA for their employees
     *
     * @return $this
     */
    public function setOrganizationOffersLimitedHfsa($organization_offers_limited_hfsa)
    {
        $this->container['organization_offers_limited_hfsa'] = $organization_offers_limited_hfsa;

        return $this;
    }

    /**
     * Gets transit_programs
     *
     * @return \Swagger\Client\Model\PretaxProgramEnrollmentEntity[]
     */
    public function getTransitPrograms()
    {
        return $this->container['transit_programs'];
    }

    /**
     * Sets transit_programs
     *
     * @param \Swagger\Client\Model\PretaxProgramEnrollmentEntity[] $transit_programs Details for transit programs
     *
     * @return $this
     */
    public function setTransitPrograms($transit_programs)
    {
        $this->container['transit_programs'] = $transit_programs;

        return $this;
    }

    /**
     * Gets dependent_care_programs
     *
     * @return \Swagger\Client\Model\DependentCareProgramEnrollmentEntity
     */
    public function getDependentCarePrograms()
    {
        return $this->container['dependent_care_programs'];
    }

    /**
     * Sets dependent_care_programs
     *
     * @param \Swagger\Client\Model\DependentCareProgramEnrollmentEntity $dependent_care_programs dependent_care_programs
     *
     * @return $this
     */
    public function setDependentCarePrograms($dependent_care_programs)
    {
        $this->container['dependent_care_programs'] = $dependent_care_programs;

        return $this;
    }

    /**
     * Gets hsa_program
     *
     * @return \Swagger\Client\Model\HSAProgramEnrollmentEntity
     */
    public function getHsaProgram()
    {
        return $this->container['hsa_program'];
    }

    /**
     * Sets hsa_program
     *
     * @param \Swagger\Client\Model\HSAProgramEnrollmentEntity $hsa_program hsa_program
     *
     * @return $this
     */
    public function setHsaProgram($hsa_program)
    {
        $this->container['hsa_program'] = $hsa_program;

        return $this;
    }

    /**
     * Gets healthcare_fsa_programs
     *
     * @return \Swagger\Client\Model\HealthcareFSAProgramEnrollmentEntity
     */
    public function getHealthcareFsaPrograms()
    {
        return $this->container['healthcare_fsa_programs'];
    }

    /**
     * Sets healthcare_fsa_programs
     *
     * @param \Swagger\Client\Model\HealthcareFSAProgramEnrollmentEntity $healthcare_fsa_programs healthcare_fsa_programs
     *
     * @return $this
     */
    public function setHealthcareFsaPrograms($healthcare_fsa_programs)
    {
        $this->container['healthcare_fsa_programs'] = $healthcare_fsa_programs;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
